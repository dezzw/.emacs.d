;; init-prog.el --- Measure startup and require times -*- lexical-binding: t -*-
;;; Commentary:
;;; Code:
(defvar +treesit-language-source-alist
  '((awk . "https://github.com/Beaglefoot/tree-sitter-awk")
    (bash . "https://github.com/tree-sitter/tree-sitter-bash")
    (bibtex . "https://github.com/latex-lsp/tree-sitter-bibtex")
    (blueprint . "https://github.com/huanie/tree-sitter-blueprint")
    (c . "https://github.com/tree-sitter/tree-sitter-c")
    (c-sharp . "https://github.com/tree-sitter/tree-sitter-c-sharp")
    (clojure . "https://github.com/sogaiu/tree-sitter-clojure")
    (cmake . "https://github.com/uyha/tree-sitter-cmake")
    (commonlisp . "https://github.com/tree-sitter-grammars/tree-sitter-commonlisp")
    (cpp . "https://github.com/tree-sitter/tree-sitter-cpp")
    (css . "https://github.com/tree-sitter/tree-sitter-css")
    (dart . "https://github.com/UserNobody14/tree-sitter-dart")
    (dockerfile . "https://github.com/camdencheek/tree-sitter-dockerfile")
    (elisp . "https://github.com/Wilfred/tree-sitter-elisp")
    (elixir . "https://github.com/elixir-lang/tree-sitter-elixir")
    (glsl . "https://github.com/tree-sitter-grammars/tree-sitter-glsl")
    (go . "https://github.com/tree-sitter/tree-sitter-go")
    (gomod . "https://github.com/camdencheek/tree-sitter-go-mod")
    (heex . "https://github.com/phoenixframework/tree-sitter-heex")
    (html . "https://github.com/tree-sitter/tree-sitter-html")
    (janet-simple . "https://github.com/sogaiu/tree-sitter-janet-simple")
    (java . "https://github.com/tree-sitter/tree-sitter-java")
    (jsdoc . "https://github.com/tree-sitter/tree-sitter-jsdoc")
    (javascript . "https://github.com/tree-sitter/tree-sitter-javascript")
    (json . "https://github.com/tree-sitter/tree-sitter-json")
    (julia . "https://github.com/tree-sitter/tree-sitter-julia")
    (kotlin . "https://github.com/fwcd/tree-sitter-kotlin")
    (latex . "https://github.com/latex-lsp/tree-sitter-latex")
    (lua . "https://github.com/tree-sitter-grammars/tree-sitter-lua")
    (magik . "https://github.com/krn-robin/tree-sitter-magik")
    (make . "https://github.com/tree-sitter-grammars/tree-sitter-make")
    (markdown . "https://github.com/tree-sitter-grammars/tree-sitter-markdown")
    (markdown-inline . "https://github.com/tree-sitter-grammars/tree-sitter-markdown")
    (nix . "https://github.com/nix-community/tree-sitter-nix")
    (nu . "https://github.com/nushell/tree-sitter-nu")
    (org . "https://github.com/milisims/tree-sitter-org")
    (perl . "https://github.com/ganezdragon/tree-sitter-perl")
    (proto . "https://github.com/mitchellh/tree-sitter-proto")
    (python . "https://github.com/tree-sitter/tree-sitter-python")
    (r . "https://github.com/r-lib/tree-sitter-r")
    (ruby . "https://github.com/tree-sitter/tree-sitter-ruby")
    (rust . "https://github.com/tree-sitter/tree-sitter-rust")
    (scala . "https://github.com/tree-sitter/tree-sitter-scala")
    (sql . "https://github.com/DerekStride/tree-sitter-sql")
    (surface . "https://github.com/connorlay/tree-sitter-surface")
    (toml . "https://github.com/tree-sitter-grammars/tree-sitter-toml")
    (tsx . "https://github.com/tree-sitter/tree-sitter-typescript")
    (typescript . "https://github.com/tree-sitter/tree-sitter-typescript")
    (typst . "https://github.com/uben0/tree-sitter-typst")
    (verilog . "https://github.com/gmlarumbe/tree-sitter-verilog")
    (vhdl . "https://github.com/alemuller/tree-sitter-vhdl")
    (vue . "https://github.com/tree-sitter-grammars/tree-sitter-vue")
    (wast . "https://github.com/wasm-lsp/tree-sitter-wasm")
    (wat . "https://github.com/wasm-lsp/tree-sitter-wasm")
    (wgsl . "https://github.com/mehmetoguzderin/tree-sitter-wgsl")
    (yaml . "https://github.com/tree-sitter-grammars/tree-sitter-yaml")))

(defun +treesit-install-all-languages ()
  "Install all languages specified by `treesit-language-source-alist'."
  (interactive)
  (let ((languages (mapcar 'car treesit-language-source-alist)))
    (dolist (lang languages)
      (treesit-install-language-grammar lang)
      (message "`%s' parser was installed." lang)
      (sit-for 0.75))))

(provide 'lib-treesit)
;;; lib-treesit.el ends here
