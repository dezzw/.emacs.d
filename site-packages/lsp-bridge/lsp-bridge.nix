{
  lib,
  python3,
  melpaBuild,
  fetchFromGitHub,
  substituteAll,
  yasnippet,
  markdown-mode,
  basedpyright,
  git,
  go,
  gopls,
  tempel,
  unstableGitUpdater,
}:

let
  owner = "manateelazycat";
  repo = "lsp-bridge";
  rev = "2dd9105b810f0f5519d16f7998f0228bce97de69";
  hash = "sha256-fbAE/xPb/0vJhVcKipyEg/UbwPvjMWX8JL9TMz79nbo=";
  python = python3.withPackages (ps: with ps; [
    setuptools
    epc
    orjson
    sexpdata
    six
    paramiko
    rapidfuzz
    watchdog
  ]);

  acm = melpaBuild rec {
    pname = "acm";
    version = "20241013";

    src = fetchFromGitHub {
      inherit owner;
      inherit repo;
      inherit rev;
      inherit hash;
    };

    packageRequires = [ yasnippet ];

    files = ''("acm/*.el" "acm/icons")'';
  };
in
melpaBuild {
  pname = "lsp-bridge";
  version = "20241013";
  
  src = fetchFromGitHub {
    inherit owner;
    inherit repo;
    inherit rev;
    inherit hash;
  };

  commit = rev;

  patches = [
    # Hardcode the python dependencies needed for lsp-bridge, so users
    # don't have to modify their global environment
    (substituteAll {
      src = ./hardcode-dependencies.patch;
      python = python.interpreter;
    })
  ];

  packageRequires = [
    acm
    yasnippet
    markdown-mode
  ];

  checkInputs = [
    # Emacs packages
    tempel

    # Executables
    basedpyright
    git
    go
    gopls
    python
  ];

  files = ''
    ("*.el"
     "*.py"
     "core"
     "acm"
     "langserver"
     "multiserver"
     "resources")
  '';
  
  # recipe = writeText "recipe" ''
  #   (lsp-bridge
  #     :repo "manateelazycat/lsp-bridge"
  #     :fetcher github
  #     :files
  #     ("*.el"
  #      "*.py"
  #      "acm"
  #      "core"
  #      "langserver"
  #      "multiserver"
  #      "resources"))
  # '';

  doCheck = false;

  passthru.updateScript = unstableGitUpdater { };

  meta = with lib; {
    description = "A blazingly fast LSP client for Emacs";
    homepage = "https://github.com/manateelazycat/lsp-bridge";
    license = licenses.gpl3Only;
  };
}
